@page "/students/details/{StudentId:int}"
@inject HttpClient http
@inject NavigationManager navigationManager
@using System.Text.Json
@using BlazorMasterDetail.Shared;

<h3>Student Details</h3>

@if (student == null)
{
    <p>Student not found</p>
}
else
{
    <StudentForm student="student" mode="details" />
}

<div class="form-group mt-3">
    <a class="btn btn-primary" href="/students/edit/@student.Id">Edit Details</a>
</div>

<button class="btn btn-secondary" @onclick="GoBack">Back to Students List</button>

@code {
    [Parameter] public int StudentId { get; set; }
    private Student student;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await http.GetAsync($"api/students/{StudentId}");

            if (response.IsSuccessStatusCode)
            {
                student = JsonSerializer.Deserialize<Student>(
                    await response.Content.ReadAsStringAsync(),
                    new JsonSerializerOptions() { PropertyNameCaseInsensitive = true }
                );
            }
            else
            {
                // Handle specific error cases (e.g., 404)
                if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
                {
                    // Student not found
                    Console.WriteLine("Student not found");
                }
                else
                {
                    // Other errors
                    Console.WriteLine($"Error: {response.StatusCode}");
                }
                
                navigationManager.NavigateTo("students");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            navigationManager.NavigateTo("students");
        }
    }

    private void GoBack()
    {
        navigationManager.NavigateTo("/students");
    }
}
